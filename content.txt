# Laravel Draftable

**Laravel Draftable** is a package that adds **drafts**, **versioning**, and **publication flow** to any Eloquent model in a Laravel application.

---

## ✨ Features

- Save any model as a **draft**, without publishing changes immediately
- Maintain a **version history** of all changes
- Compare versions to see what changed (`diff`)
- **Restore** a previous version at any time
- Automatically or manually **publish** drafts
- Support for multiple storage strategies (same table or separate `drafts` table)
- Preview a draft without making it live
- Integration with Laravel policies for access control
- Support for soft deletes and timestamps

---

## 📦 Installation

```bash
composer require grazulex/laravel-draftable
```

---

## 🧪 Usage

### Add the trait to your model

```php
use Grazulex\Draftable\Traits\HasDrafts;

class Post extends Model
{
    use HasDrafts;
}
```

### Save a draft

```php
$post->title = 'Updated title';
$post->saveDraft();
```

### Publish the latest draft

```php
$post->publishDraft();
```

### List all drafts

```php
$drafts = $post->drafts;
```

### Compare two versions

```php
$diff = DraftDiff::compare($v1, $v2);
```

### Restore a previous version

```php
$post->restoreVersion($versionId);
```

---

## 🗃️ Recommended Draft Table Migration

```php
Schema::create('drafts', function (Blueprint $table) {
    $table->id();
    $table->morphs('draftable');
    $table->json('payload');
    $table->unsignedBigInteger('version')->default(1);
    $table->foreignId('created_by')->nullable()->constrained('users');
    $table->timestamp('published_at')->nullable();
    $table->timestamps();
});
```

---

## 📊 Optional Diff Output

```php
[
  'title' => ['old' => 'Old title', 'new' => 'New title'],
  'content' => ['old' => 'Lorem...', 'new' => 'Updated content']
]
```

---

## 🧪 Example Tests with Pest

- it_can_save_a_draft_without_publishing
- it_can_publish_a_draft
- it_can_list_all_drafts_for_a_model
- it_can_compare_two_versions
- it_can_restore_a_version

---

## 🔐 Access Control

Draftable supports Laravel Policies. You can restrict publishing to specific roles:

```php
Gate::define('publish', function ($user, $post) {
    return $user->isEditorOrAdmin();
});
```

---

## 🧩 Optional Artisan Commands

```bash
php artisan draftable:clear-old --days=90
php artisan draftable:list
php artisan draftable:diff Post 123 125
```

---

## 🔮 Roadmap Ideas

- Webhook support on publish
- Git-style delta storage engine
- Moderation workflow with approval states

---

## License

MIT © Grazulex